"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.appUse = void 0;
const utils_1 = require("@vuepress/utils");
const normalizePlugin_1 = require("./normalizePlugin");
const log = utils_1.debug('vuepress:core/app');
const appUse = (app, rawPlugin, config) => {
    // normalize plugin
    const plugin = normalizePlugin_1.normalizePlugin(app, rawPlugin, config);
    log(`use plugin ${utils_1.chalk.magenta(plugin.name)}`);
    if (plugin.multiple !== true) {
        // remove duplicated plugin
        const duplicateIndex = app.pluginApi.plugins.findIndex(({ name }) => name === plugin.name);
        if (duplicateIndex !== -1) {
            app.pluginApi.plugins.splice(duplicateIndex, 1);
            // show warning when duplicate plugins are detected
            utils_1.warn(`plugin ${utils_1.chalk.magenta(plugin.name)} has been used multiple times, only the last one will take effect`);
        }
    }
    // use plugin
    app.pluginApi.plugins.push(plugin);
    // TODO: nested plugins with `multiple` may cause potential problems
    // if the plugin uses other plugins
    if (plugin.plugins) {
        plugin.plugins.forEach(app.useByConfig);
    }
};
exports.appUse = appUse;
